#Creates a sniffer
define voipmonitor::sniffer (
  String $absolute_timeout,
  String $autocleanmingb,
  String $autocleanspool,
  String $autocleanspoolminpercent,
  String $cdr_rtpport,
  String $cdr_sipport,
  String $cdrproxy,
  String $destroy_call_at_bye,
  String $dscp,
  Boolean $enable,
  String $ensure,
  String $id_sensor,
  String $interface,
  String $managerip,
  String $managerport,
  String $max_buffer_mem,
  String $maxpoolsize_2,
  String $maxpoolsize,
  String $mos_g729,
  String $mos_lqo_bin,
  String $mos_lqo_ref,
  String $mos_lqo_ref16,
  String $mos_lqo,
  String $nocdr,
  String $ogg_quality,
  String $onewaytimeout,
  String $packetbuffer_compress_ratio,
  String $packetbuffer_compress,
  String $packetbuffer_enable,
  String $pcap_dump_asyncwrite,
  String $pcap_dump_bufflength,
  String $pcap_dump_writethreads_max,
  String $pcap_dump_writethreads,
  String $pcap_dump_zip_rtp,
  String $pcap_dump_zip,
  String $pcap_dump_ziplevel_sip,
  String $promisc,
  String $ringbuffer,
  String $saveaudio_stereo,
  String $savegraph,
  String $savertcp,
  String $savertp,
  String $savesip,
  String $server_destination_port,
  String $server_destination,
  String $server_password,
  String $sip_options,
  String $sip_register_active_nologbin,
  String $sip_register_timeout,
  String $sip_register,
  String $sipport,
  String $spooldir_prefix,
  String $tar_compress_graph,
  String $tar_compress_rtp,
  String $tar_compress_sip,
  String $tar_graph_level,
  String $tar_maxthreads,
  String $tar_rtp_level,
  String $tar_sip_level,
  String $tar,
  Boolean $utc,
) {
  $spooldir = $spooldir_prefix + $id_sensor
  file { [$spooldir_prefix, $spooldir]:
    ensure => directory
  }
  file { "/etc/voipmonitor-${id_sensor}.conf":
    ensure  => present,
    content => template('sniffer/voipmonitor.conf.erb'),
    notify  => Service["voipmonitor-${id_sensor}"]
  }
  voipmonitor::service { "voipmonitor-${id_sensor}": }
}
